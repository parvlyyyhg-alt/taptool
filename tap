import os
import colorama
from colorama import Fore, Style
import pyfiglet

colorama.init()

# Функция для очистки экрана
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

# Функция для создания градиентного текста
def print_gradient_text(text, font, start_color, end_color):
    ascii_art = pyfiglet.figlet_format(text, font=font)
    lines = ascii_art.split('\n')
    for i, line in enumerate(lines):
        r = int(start_color[0] + (end_color[0] - start_color[0]) * i / len(lines))
        g = int(start_color[1] + (end_color[1] - start_color[1]) * i / len(lines))
        b = int(start_color[2] + (end_color[2] - start_color[2]) * i / len(lines))
        color_code = f"\033[38;2;{r};{g};{b}m"
        print(color_code + line.center(os.get_terminal_size().columns))
    print(Style.RESET_ALL)

# Функция для поиска в базе данных
def search_in_db(query):
    if not os.path.exists('database/db.txt'):
        return False
    
    with open('database/db.txt', 'r', encoding='utf-8') as f:
        for line in f:
            if query.lower() in line.lower():
                return line.strip()
    return False

def main():
    start_color = (0, 0, 255)
    end_color = (0, 255, 0)
    
    # Переключение в полноэкранный режим (для Windows)
    if os.name == 'nt':
        os.system('mode con: cols=120 lines=40')
    
    while True:
        clear_screen()
        
        # Выводим заголовок TAP большими буквами по центру
        print_gradient_text("TAP", "big", start_color, end_color)
        
        # Выводим меню
        terminal_width = os.get_terminal_size().columns
        menu_items = [
            "1. По номеру телефона",
            "2. По email", 
            "3. По ФИО",
            "0. Выход"
        ]
        
        print("\n" * 3)  # Отступ сверху
        
        for item in menu_items:
            print(item.center(terminal_width))
        
        print("\n" * 3)  # Отступ снизу
        
        choice = input("Введите номер: ".center(terminal_width))
        
        if choice == "0":
            break
            
        elif choice == "1":
            clear_screen()
            print_gradient_text("TAP", "big", start_color, end_color)
            phone = input("\n\nВведите номер для поиска: ".center(terminal_width))
            result = search_in_db(phone)
            if result:
                print(Fore.GREEN + f"\nНайдено: {result}".center(terminal_width) + Style.RESET_ALL)
            else:
                print(Fore.RED + "\nДанных не имеется".center(terminal_width) + Style.RESET_ALL)
        
        elif choice == "2":
            clear_screen()
            print_gradient_text("TAP", "big", start_color, end_color)
            email = input("\n\nВведите email для поиска: ".center(terminal_width))
            result = search_in_db(email)
            if result:
                print(Fore.GREEN + f"\nНайдено: {result}".center(terminal_width) + Style.RESET_ALL)
            else:
                print(Fore.RED + "\nДанных не имеется".center(terminal_width) + Style.RESET_ALL)
        
        elif choice == "3":
            clear_screen()
            print_gradient_text("TAP", "big", start_color, end_color)
            fio = input("\n\nВведите ФИО для поиска: ".center(terminal_width))
            result = search_in_db(fio)
            if result:
                print(Fore.GREEN + f"\nНайдено: {result}".center(terminal_width) + Style.RESET_ALL)
            else:
                print(Fore.RED + "\nДанных не имеется".center(terminal_width) + Style.RESET_ALL)
        
        else:
            clear_screen()
            print_gradient_text("TAP", "big", start_color, end_color)
            print(Fore.RED + "\nОшибка выбора!".center(terminal_width) + Style.RESET_ALL)
        
        input("\n\nНажмите Enter для продолжения...".center(terminal_width))

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"Ошибка: {e}")
